generator client {
  provider = "prisma-client-js"
  // Optimize for serverless deployments
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Enable connection pooling for serverless
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  seller    Seller?
}

model Seller {
  id             String  @id @unique
  sales_value    Float?  @default(0)
  ticket_average Float?  @default(0)
  pa             Float?  @default(0)
  points         Int?    @default(0)
  extra_points   Int?    @default(0)
  team_id        String?
  user           User    @relation(fields: [id], references: [id], onDelete: Cascade)
}

model Mission {
  id          String   @id @default(cuid())
  title       String
  description String?
  points      Int
  type        String?
  goal        Float?
  prize       Float?
  course_id   String?
  createdAt   DateTime @default(now())
}

model DailySprint {
  id              String    @id @default(cuid())
  title           String
  description     String?
  goal            Float?
  prize           Float?
  is_active       Boolean   @default(false)
  created_at      DateTime  @default(now())
  start_date      DateTime?
  end_date        DateTime?
  participant_ids String[]
  sprint_tiers    Json
}

model Goals {
  id           String   @id @default("main")
  monthly_goal Float?
  pa_goal      Float?
  ticket_goal  Float?
  data         Json?
  updated_at   DateTime @updatedAt
}
